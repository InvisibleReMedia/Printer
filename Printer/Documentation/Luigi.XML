<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Luigi</name>
    </assembly>
    <members>
        <member name="T:Luigi.accu.Literal">
            <summary>
            State a literal
            </summary>
        </member>
        <member name="F:Luigi.accu.Literal.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.Literal.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.Literal.#ctor(System.String,System.Object)">
            <summary>
            Default constructor
            </summary>
            <param name="n"></param>
            <param name="p">parent</param>
        </member>
        <member name="M:Luigi.accu.Literal.Apply(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Apply
            </summary>
            <param name="pars">parameters</param>
            <returns>string result</returns>
        </member>
        <member name="M:Luigi.accu.Literal.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.Literal.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Literal.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Literal.TypeName">
            <summary>
            Gets the type name
            </summary>
        </member>
        <member name="P:Luigi.accu.Literal.Delimiter">
            <summary>
            Gets or sets the delimiter
            </summary>
        </member>
        <member name="P:Luigi.accu.Literal.Text">
            <summary>
            Gets or sets the content
            </summary>
        </member>
        <member name="T:Luigi.accu.Mapper">
            <summary>
            State a mapper
            </summary>
        </member>
        <member name="F:Luigi.accu.Mapper.keys">
            <summary>
            Keys
            </summary>
        </member>
        <member name="F:Luigi.accu.Mapper.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.Mapper.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.Mapper.#ctor(System.String,System.Object)">
            <summary>
            Default constructor
            </summary>
            <param name="n">name</param>
            <param name="p">parent</param>
        </member>
        <member name="M:Luigi.accu.Mapper.AddKey(System.String,System.String,System.String)">
            <summary>
            Add a key
            </summary>
            <param name="key">key name</param>
            <param name="delimiter">delimiter</param>
            <param name="text">text</param>
        </member>
        <member name="M:Luigi.accu.Mapper.EditKey(System.String,System.String,System.String)">
            <summary>
            Edit a key
            </summary>
            <param name="key">key name</param>
            <param name="delimiter">delimiter</param>
            <param name="text">text</param>
        </member>
        <member name="M:Luigi.accu.Mapper.DeleteKey(System.String)">
            <summary>
            Delete a key
            </summary>
            <param name="key">key name</param>
        </member>
        <member name="M:Luigi.accu.Mapper.ToString(System.Int32,Accu.Accu,Printer.PrinterVariable)">
            <summary>
            Converts accumulator to a string representation
            </summary>
            <param name="index">iterator</param>
            <param name="child">child</param>
            <param name="subPv">printer variable</param>
        </member>
        <member name="M:Luigi.accu.Mapper.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.Mapper.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Mapper.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Mapper.TypeName">
            <summary>
            Gets the type name
            </summary>
        </member>
        <member name="P:Luigi.accu.Mapper.Count">
            <summary>
            Gets the number of keys
            </summary>
        </member>
        <member name="T:Luigi.accu.Print">
            <summary>
            Print action
            </summary>
        </member>
        <member name="F:Luigi.accu.Print.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.Print.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.Print.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Object)">
            <summary>
            Default constructor
            </summary>
            <param name="s">sequence of terms</param>
            <param name="p">parent</param>
        </member>
        <member name="M:Luigi.accu.Print.Apply(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Apply
            </summary>
            <param name="pars">parameters</param>
            <returns>string result</returns>
        </member>
        <member name="M:Luigi.accu.Print.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.Print.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Print.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Print.TypeName">
            <summary>
            Gets the type name
            </summary>
        </member>
        <member name="T:Luigi.accu.Reference">
            <summary>
            Is an object referencing an another object by its names
            </summary>
        </member>
        <member name="F:Luigi.accu.Reference.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.Reference.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.Reference.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Default constructor
            </summary>
            <param name="n">name</param>
            <param name="v">value</param>
            <param name="p">parent</param>
        </member>
        <member name="M:Luigi.accu.Reference.Apply(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Apply
            </summary>
            <param name="pars">parameters</param>
            <returns>string result</returns>
        </member>
        <member name="M:Luigi.accu.Reference.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.Reference.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Reference.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Reference.TypeName">
            <summary>
            Gets the type name
            </summary>
        </member>
        <member name="P:Luigi.accu.Reference.ReferencedObject">
            <summary>
            Gets the name
            </summary>
        </member>
        <member name="T:Luigi.accu.Type">
            <summary>
            Is a type name representing an object
            </summary>
        </member>
        <member name="F:Luigi.accu.Type.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.Type.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.Type.#ctor(System.Object,System.Object)">
            <summary>
            Default constructor
            </summary>
            <param name="v">value</param>
            <param name="p">parent</param>
        </member>
        <member name="M:Luigi.accu.Type.Apply(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Apply
            </summary>
            <param name="pars">parameters</param>
            <returns>string result</returns>
        </member>
        <member name="M:Luigi.accu.Type.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.Type.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Type.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Type.TypeName">
            <summary>
            Gets the type name
            </summary>
        </member>
        <member name="T:Luigi.accu.Parameter">
            <summary>
            Is an element parameter of a set
            </summary>
        </member>
        <member name="F:Luigi.accu.Parameter.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.Parameter.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.Parameter.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Default constructor
            </summary>
            <param name="n">name</param>
            <param name="v">value</param>
            <param name="p">parent</param>
        </member>
        <member name="M:Luigi.accu.Parameter.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.Parameter.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Parameter.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Parameter.TypeName">
            <summary>
            Gets the type name
            </summary>
        </member>
        <member name="P:Luigi.accu.Parameter.InnerTypeName">
            <summary>
            Gets or sets the inner type of inner object
            </summary>
        </member>
        <member name="T:Luigi.accu.Set">
            <summary>
            Statement for a set
            </summary>
        </member>
        <member name="F:Luigi.accu.Set.pars">
            <summary>
            Keys
            </summary>
        </member>
        <member name="F:Luigi.accu.Set.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.Set.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.Set.#ctor(System.String,System.Object)">
            <summary>
            Default constructor
            </summary>
            <param name="n">name</param>
            <param name="p">parent</param>
        </member>
        <member name="M:Luigi.accu.Set.AddParameter(System.String,System.Object)">
            <summary>
            Add a key
            </summary>
            <param name="key">key name</param>
            <param name="v">value</param>
        </member>
        <member name="M:Luigi.accu.Set.EditParameter(System.String,System.Object)">
            <summary>
            Edit a key
            </summary>
            <param name="key">key name</param>
            <param name="v">value</param>
        </member>
        <member name="M:Luigi.accu.Set.DeleteParameter(System.String)">
            <summary>
            Delete a key
            </summary>
            <param name="key">key name</param>
        </member>
        <member name="M:Luigi.accu.Set.ToString(System.Int32,Accu.Accu,Printer.PrinterVariable)">
            <summary>
            Converts accumulator to a string representation
            </summary>
            <param name="index">iterator</param>
            <param name="child">child</param>
            <param name="subPv">printer variable</param>
        </member>
        <member name="M:Luigi.accu.Set.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.Set.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Set.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.Set.TypeName">
            <summary>
            Gets the type name
            </summary>
        </member>
        <member name="P:Luigi.accu.Set.Count">
            <summary>
            Gets the number of keys
            </summary>
        </member>
        <member name="T:Luigi.accu.TopLevel">
            <summary>
            Top level of the structure
            </summary>
        </member>
        <member name="F:Luigi.accu.TopLevel.types">
            <summary>
            Keys
            </summary>
        </member>
        <member name="F:Luigi.accu.TopLevel.root">
            <summary>
            Top level class (use for a get reference object)
            </summary>
        </member>
        <member name="F:Luigi.accu.TopLevel.parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="M:Luigi.accu.TopLevel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Luigi.accu.TopLevel.AddType(System.Object)">
            <summary>
            Add a key
            </summary>
            <param name="v">value</param>
        </member>
        <member name="M:Luigi.accu.TopLevel.EditType(System.Object)">
            <summary>
            Edit a key
            </summary>
            <param name="v">value</param>
        </member>
        <member name="M:Luigi.accu.TopLevel.DeleteType(System.String)">
            <summary>
            Delete a key
            </summary>
            <param name="key">key name</param>
        </member>
        <member name="M:Luigi.accu.TopLevel.Load(System.String)">
            <summary>
            Load a file from disk
            </summary>
            <param name="fileName">full path of fileName</param>
            <returns>object</returns>
        </member>
        <member name="M:Luigi.accu.TopLevel.Save(Luigi.accu.TopLevel,System.String)">
            <summary>
            Save a LuigiElement to disk
            </summary>
            <param name="obj">object to save</param>
            <param name="fileName">full path of fileName to save</param>
        </member>
        <member name="M:Luigi.accu.TopLevel.Load(System.IO.Stream)">
            <summary>
            Load a file from memory
            You must close the stream after this method
            </summary>
            <param name="stream">stream buffer</param>
            <returns>object</returns>
        </member>
        <member name="M:Luigi.accu.TopLevel.Save(Luigi.accu.TopLevel,System.IO.Stream)">
            <summary>
            Save a LuigiElement to memory
            You must close the stream after this method
            </summary>
            <param name="obj">object to save</param>
            <param name="stream">stream buffer</param>
        </member>
        <member name="M:Luigi.accu.TopLevel.RecursiveFindByName(Luigi.accu.TopLevel,System.String)">
            <summary>
            Recursive find by id
            </summary>
            <param name="root">first accu</param>
            <param name="name">name</param>
            <returns>last accu</returns>
        </member>
        <member name="M:Luigi.accu.TopLevel.Apply(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Apply
            </summary>
            <param name="pars">parameters</param>
            <returns>string result</returns>
        </member>
        <member name="M:Luigi.accu.TopLevel.ToString">
            <summary>
            Converts this object into a string representation (source code)
            </summary>
            <returns>string representation as the source code</returns>
        </member>
        <member name="P:Luigi.accu.TopLevel.Root">
            <summary>
            Gets the root parent
            </summary>
        </member>
        <member name="P:Luigi.accu.TopLevel.Parent">
            <summary>
            Gets the parent
            </summary>
        </member>
        <member name="P:Luigi.accu.TopLevel.Count">
            <summary>
            Gets the number of keys
            </summary>
        </member>
        <member name="T:Luigi.Program">
            <summary>
            The principal program
            </summary>
        </member>
        <member name="M:Luigi.Program.Main(System.String[])">
            <summary>
            Main function
            </summary>
            <param name="args">command-line arguments</param>
        </member>
    </members>
</doc>
