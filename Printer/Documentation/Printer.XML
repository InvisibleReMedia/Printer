<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Printer</name>
    </assembly>
    <members>
        <member name="T:Printer.Configuration">
            <summary>
            Class of configuration
            variables definition
            </summary>
        </member>
        <member name="F:Printer.Configuration.values">
            <summary>
            Values
            </summary>
        </member>
        <member name="M:Printer.Configuration.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Printer.Configuration.Count">
            <summary>
            Count the number of conf
            </summary>
        </member>
        <member name="P:Printer.Configuration.Item(System.String)">
            <summary>
            Gets or sets a value key
            </summary>
            <param name="key">key</param>
            <returns>value</returns>
        </member>
        <member name="M:Printer.Configuration.Add(System.String,System.String)">
            <summary>
            Add an item
            </summary>
            <param name="key">key</param>
            <param name="value">value</param>
        </member>
        <member name="M:Printer.Configuration.Edit(System.String,System.String)">
            <summary>
            Edit an item
            </summary>
            <param name="key">key</param>
            <param name="value">value</param>
        </member>
        <member name="M:Printer.Configuration.Delete(System.String)">
            <summary>
            Suppress a key
            </summary>
            <param name="key">key</param>
        </member>
        <member name="M:Printer.Configuration.Find(System.String)">
            <summary>
            Find all occurences
            </summary>
            <param name="s">string to compare</param>
            <returns>found matches keys</returns>
        </member>
        <member name="M:Printer.Configuration.GetEnumerator">
            <summary>
            Gets the enumerator to iterate
            conf
            </summary>
            <returns></returns>
        </member>
        <member name="M:Printer.Configuration.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>new object</returns>
        </member>
        <member name="M:Printer.Configuration.Execute(System.String)">
            <summary>
            Execute commands
            </summary>
            <param name="input">input string</param>
            <returns>edited string</returns>
        </member>
        <member name="M:Printer.Configuration.ToString(System.Xml.XmlWriter)">
            <summary>
            Generates the source code
            of this Configuration
            </summary>
            <param name="xml"></param>
            <returns>the string representation</returns>
        </member>
        <member name="M:Printer.Configuration.ToString">
            <summary>
            Generates the source code
            of this PrinterObject
            </summary>
            <returns>the string representation</returns>
        </member>
        <member name="M:Printer.Configuration.Load(System.String)">
            <summary>
            Load a file from disk
            </summary>
            <param name="fileName">full path of fileName</param>
            <returns>object</returns>
        </member>
        <member name="M:Printer.Configuration.Save(Printer.Configuration,System.String)">
            <summary>
            Save a PrinterObject to disk
            </summary>
            <param name="obj">object to save</param>
            <param name="fileName">full path of fileName to save</param>
        </member>
        <member name="T:Printer.PrinterObject">
            <summary>
            Printer class
            </summary>
        </member>
        <member name="F:Printer.PrinterObject.variables">
            <summary>
            Data variable
            </summary>
        </member>
        <member name="F:Printer.PrinterObject.datas">
            <summary>
            List of data to prints
            </summary>
        </member>
        <member name="F:Printer.PrinterObject.unique">
            <summary>
            Generates unique strings
            </summary>
        </member>
        <member name="F:Printer.PrinterObject.config">
            <summary>
            Configuration object
            </summary>
        </member>
        <member name="F:Printer.PrinterObject.IndentSize">
            <summary>
            Size indent space char
            </summary>
        </member>
        <member name="M:Printer.PrinterObject.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Printer.PrinterObject.Values">
            <summary>
            Gets all values
            </summary>
        </member>
        <member name="P:Printer.PrinterObject.Data">
            <summary>
            Gets all data sequence
            </summary>
        </member>
        <member name="P:Printer.PrinterObject.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
        </member>
        <member name="M:Printer.PrinterObject.ExistTestVariable(System.String)">
            <summary>
            Test if existing variable
            </summary>
            <param name="key">key name</param>
            <returns>true if exist</returns>
        </member>
        <member name="M:Printer.PrinterObject.EditVariable(System.String,System.String)">
            <summary>
            Edit a variable
            </summary>
            <param name="key">key name</param>
            <param name="val">string value</param>
        </member>
        <member name="M:Printer.PrinterObject.EditVariable(System.String,Printer.PrinterVariable)">
            <summary>
            Edit a variable
            </summary>
            <param name="key">key name</param>
            <param name="obj">object value</param>
        </member>
        <member name="M:Printer.PrinterObject.AddVariable(System.String,Printer.PrinterVariable)">
            <summary>
            Add a variable
            </summary>
            <param name="key">key name</param>
            <param name="obj">object value</param>
        </member>
        <member name="M:Printer.PrinterObject.AddVariable(System.String,System.String)">
            <summary>
            Add a variable
            </summary>
            <param name="key">key name</param>
            <param name="val">string value</param>
        </member>
        <member name="M:Printer.PrinterObject.DeleteVariable(System.String)">
            <summary>
            Delete a variable
            </summary>
            <param name="key">key name</param>
        </member>
        <member name="M:Printer.PrinterObject.UseVariable(System.String)">
            <summary>
            Use a variable
            </summary>
            <param name="name">variable name</param>
        </member>
        <member name="M:Printer.PrinterObject.UseChangeVariable(System.Int32,System.String)">
            <summary>
            Change the use of a variable
            </summary>
            <param name="index">position</param>
            <param name="name">variable name</param>
        </member>
        <member name="M:Printer.PrinterObject.InsertUseVariableBefore(System.Int32,System.String)">
            <summary>
            Insert the use of a variable before
            </summary>
            <param name="index">position</param>
            <param name="name">variable name</param>
        </member>
        <member name="M:Printer.PrinterObject.InsertUseVariableAfter(System.Int32,System.String)">
            <summary>
            Insert the use of a variable after
            </summary>
            <param name="index">position</param>
            <param name="name">variable name</param>
        </member>
        <member name="M:Printer.PrinterObject.AddData(System.String)">
            <summary>
            Add data into list
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Printer.PrinterObject.EditData(System.Int32,System.String)">
            <summary>
            Edit data at index
            </summary>
            <param name="index">position</param>
            <param name="s">change</param>
        </member>
        <member name="M:Printer.PrinterObject.InsertDataBefore(System.Int32,System.String)">
            <summary>
            Insert data at index before
            </summary>
            <param name="index">position</param>
            <param name="s">value</param>
        </member>
        <member name="M:Printer.PrinterObject.InsertDataAfter(System.Int32,System.String)">
            <summary>
            Insert data at index after
            </summary>
            <param name="index">position</param>
            <param name="s">value</param>
        </member>
        <member name="M:Printer.PrinterObject.DeleteData(System.Int32)">
            <summary>
            Delete data at index
            </summary>
            <param name="index">position</param>
        </member>
        <member name="M:Printer.PrinterObject.Execute(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Write output as interpretation result
            </summary>
            <param name="w">writer</param>
        </member>
        <member name="M:Printer.PrinterObject.Execute">
            <summary>
            Write output as interpretation result
            </summary>
            <returns>output</returns>
        </member>
        <member name="M:Printer.PrinterObject.ImportConfiguration(Printer.Configuration)">
            <summary>
            Import a configuration values
            </summary>
            <param name="from">configuration values</param>
        </member>
        <member name="M:Printer.PrinterObject.Load(System.String)">
            <summary>
            Load a file from disk
            </summary>
            <param name="fileName">full path of fileName</param>
            <returns>object</returns>
        </member>
        <member name="M:Printer.PrinterObject.Save(Printer.PrinterObject,System.String)">
            <summary>
            Save a PrinterObject to disk
            </summary>
            <param name="obj">object to save</param>
            <param name="fileName">full path of fileName to save</param>
        </member>
        <member name="M:Printer.PrinterObject.Load(System.IO.Stream)">
            <summary>
            Load a file from memory
            You must close the stream after this method
            </summary>
            <param name="stream">stream buffer</param>
            <returns>object</returns>
        </member>
        <member name="M:Printer.PrinterObject.Save(Printer.PrinterObject,System.IO.Stream)">
            <summary>
            Save a PrinterObject to memory
            You must close the stream after this method
            </summary>
            <param name="obj">object to save</param>
            <param name="stream">stream buffer</param>
        </member>
        <member name="M:Printer.PrinterObject.ToString">
            <summary>
            Generates the source code
            of this PrinterObject
            </summary>
            <returns>the string representation</returns>
        </member>
        <member name="M:Printer.PrinterObject.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>new object</returns>
        </member>
        <member name="T:Printer.PrinterVariable">
            <summary>
            A printer variable
            </summary>
        </member>
        <member name="F:Printer.PrinterVariable.include">
            <summary>
            include switch
            </summary>
        </member>
        <member name="F:Printer.PrinterVariable.shouldIndent">
            <summary>
            Indent switch
            </summary>
        </member>
        <member name="F:Printer.PrinterVariable.name">
            <summary>
            Name of the variable
            </summary>
        </member>
        <member name="F:Printer.PrinterVariable.value">
            <summary>
            Value of the variable
            </summary>
        </member>
        <member name="F:Printer.PrinterVariable.includedVars">
            <summary>
            Included variables
            </summary>
        </member>
        <member name="M:Printer.PrinterVariable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Printer.PrinterVariable.Indent">
            <summary>
            Indent switch
            </summary>
        </member>
        <member name="P:Printer.PrinterVariable.Include">
            <summary>
            Include switch
            </summary>
        </member>
        <member name="P:Printer.PrinterVariable.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Printer.PrinterVariable.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="P:Printer.PrinterVariable.Values">
            <summary>
            Gets all values
            </summary>
        </member>
        <member name="M:Printer.PrinterVariable.ExistTestVariable(System.String)">
            <summary>
            Test if existing variable
            </summary>
            <param name="key">key name</param>
            <returns>true if exist</returns>
        </member>
        <member name="M:Printer.PrinterVariable.EditVariable(System.String,Printer.PrinterVariable)">
            <summary>
            Edit a variable
            </summary>
            <param name="key">key name</param>
            <param name="obj">object value</param>
        </member>
        <member name="M:Printer.PrinterVariable.EditVariable(System.String,System.String)">
            <summary>
            Edit a variable
            </summary>
            <param name="key">key name</param>
            <param name="val">string value</param>
        </member>
        <member name="M:Printer.PrinterVariable.AddVariable(System.String,Printer.PrinterVariable)">
            <summary>
            Add a variable
            </summary>
            <param name="key">key name</param>
            <param name="obj">object value</param>
        </member>
        <member name="M:Printer.PrinterVariable.AddVariable(System.String,System.String)">
            <summary>
            Add a variable
            </summary>
            <param name="key">key name</param>
            <param name="val">string value</param>
        </member>
        <member name="M:Printer.PrinterVariable.DeleteVariable(System.String)">
            <summary>
            Delete a variable
            </summary>
            <param name="key">key name</param>
        </member>
        <member name="M:Printer.PrinterVariable.Execute(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Execute the variable
            </summary>
            <param name="w">writer</param>
        </member>
        <member name="M:Printer.PrinterVariable.ToString(System.Xml.XmlWriter)">
            <summary>
            Converts the source into a string representation
            </summary>
            <param name="xml">xml document</param>
        </member>
        <member name="M:Printer.PrinterVariable.ToString">
            <summary>
            Print the string representation of a variable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Printer.PrinterVariable.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>new object</returns>
        </member>
        <member name="T:Printer.UniqueStrings">
            <summary>
            Class to stand unique strings
            </summary>
        </member>
        <member name="F:Printer.UniqueStrings.list">
            <summary>
             list of admitted chars
            </summary>
        </member>
        <member name="F:Printer.UniqueStrings.maxDepth">
            <summary>
            maximum size of the string length
            threshold of possibilites (length list)^6
            </summary>
        </member>
        <member name="F:Printer.UniqueStrings.counter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="M:Printer.UniqueStrings.#ctor">
            <summary>
            Constructs a new instance
            </summary>
        </member>
        <member name="M:Printer.UniqueStrings.#ctor(System.Int32)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="P:Printer.UniqueStrings.Counter">
            <summary>
            Gets or sets the counter position
            </summary>
        </member>
        <member name="M:Printer.UniqueStrings.ComputeNewString">
            <summary>
            Create a new unique name and increment pointer
            </summary>
            <returns>new unique name</returns>
        </member>
    </members>
</doc>
